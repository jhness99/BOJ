/*
* 1.아이디어
* 4를 기준으로 생각해보자
* 4를 만들려면 3을 만드는 조합에 1을 더해주는 조합과 , 2를 만드는 조합에 2를 더해주는 조합과 1을만드는 조합에 3을 더해주는 조합을 더해주면 된다.
* 여기서 1,2,3을 더해줄때 양쪽에 더할수 있다고 생각해서 2배의 경우가 아닌가 햇갈릴 수 있지만
* 예를 들어 1의 경우 3을 더해주는 경우는 1 3, 3 1이 있다. 이때 3 1의 경우 1을 더해주는 경우와 겹치게 된다.
* 2의 경우 1 1 2, 2 1 1, 2 2 이렇게 있는데 2 1 1 가 뒤에 1을 더해주는 경우와 겹친다.
* 따라서 중복이 없게 하기 위해 뒤에 추가하는 경우만 세게되고 따라서 i를 만들기 위해 i-1, i-2, i-3의 경우를 더해주면된다.
* 점화식
* dp[i] = dp[i-1] + dp[i-2] + dp[i-3]
* 2.시간복잡도
* O(N), N <= 11, 따라서 가능
* 3.변수형
*/
#include <iostream>

using namespace std;

int dp[11];

int main(void) {

	int T;
	cin >> T;

	dp[1] = 1;
	dp[2] = 2;
	dp[3] = 4;

	for (int i = 4; i < 11; i++)
		dp[i] = dp[i - 1] + dp[i - 2] + dp[i - 3];

	while (T--) {
		int n;
		cin >> n;
		
		cout << dp[n] << "\n";
	}

	return 0;
}